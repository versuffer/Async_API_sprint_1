version: '3.8'

services:
  postgres_db:
    container_name: postgres_db
    image: postgres:latest
    volumes:
      - ./database_dump/movies_database_dump.sql:/docker-entrypoint-initdb.d/movies_database_dump.sql:ro
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    networks:
      - custom_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2
    restart: always
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    networks:
      - custom_network
    ports:
      - "${ELASTIC_PORT}:${ELASTIC_PORT}"
    healthcheck:
       test: curl -s http://${ELASTIC_HOST}:${ELASTIC_PORT} >/dev/null || exit 1
       interval: 30s
       timeout: 10s
       retries: 50

  etl_scheduler:
    container_name: "etl_scheduler"
    image: #  TODO Добавить образ Сереги
    restart: always
    env_file:
      - ".env"
    networks:
      - custom_network
    depends_on:
      postgres_db:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy

volumes:
  postgres_data:

networks:
  custom_network:
    external: true
    driver: bridge
